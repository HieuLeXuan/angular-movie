{
  "version": 3,
  "sources": ["src/app/features/content/services/movies.service.ts", "src/app/features/content/services/on-tv.service.ts"],
  "sourcesContent": ["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { environment } from \"../../../../environments/environment\";\nimport { MovieModel } from \"../models/movie.model\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class MoviesService {\n  baseUrl: string;\n  apiKey: string;\n  language: string;\n  region: string;\n\n  constructor(private http: HttpClient) {\n    this.baseUrl = \"https://api.themoviedb.org/3/\";\n    this.apiKey = environment.theMovieDBApi;\n    this.language = \"en-US\";\n    this.region = \"US\";\n  }\n\n  getMovies(type: string, page: number): Observable<any> {\n    return this.http.get(\n      `${this.baseUrl}movie/${type}?api_key=${this.apiKey}&page=${page}&language=${this.language}&region=${this.region}`\n    );\n  }\n\n  getNowPlaying(page: number): Observable<any> {\n    return this.http.get(\n      `${this.baseUrl}movie/now_playing?api_key=${this.apiKey}&page=${page}&language=${this.language}&region=${this.region}`\n    );\n  }\n\n  getMovie(id: string): Observable<any> {\n    return this.http.get(\n      `${this.baseUrl}movie/${id}?api_key=${this.apiKey}&language=${this.language}&region=${this.region}`\n    );\n  }\n\n  getMovieVideos(id: string): Observable<any> {\n    return this.http.get(\n      `${this.baseUrl}movie/${id}/videos?api_key=${this.apiKey}`\n    );\n  }\n}\n", "import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../../../environments/environment\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OnTVService {\n  baseUrl: string;\n  apiKey: string;\n  language: string;\n  region: string;\n\n  constructor(private http: HttpClient) {\n    this.baseUrl = \"https://api.themoviedb.org/3/\";\n    this.apiKey = environment.theMovieDBApi;\n    this.language = \"en-US\";\n    this.region = \"US\";\n  }\n\n  getTvShow(type: string, page: number): Observable<any> {\n    return this.http.get(\n      `${this.baseUrl}tv/${type}?api_key=${this.apiKey}&page=${page}&language=${this.language}`\n    );\n  }\n\n  getTvOnTheAir(page: number): Observable<any> {\n    return this.http.get(\n      `${this.baseUrl}tv/on_the_air?api_key=${this.apiKey}&page=${page}&language=${this.language}`\n    );\n  }\n}\n"],
  "mappings": "wIAUA,IAAaA,GAAa,IAAA,CAApB,IAAOA,EAAP,MAAOA,CAAa,CAMxBC,YAAoBC,EAAgB,CAAhBA,EAAAA,aALpBC,EAAAA,gBACAC,EAAAA,eACAC,EAAAA,iBACAC,EAAAA,eAEoB,KAAAJ,KAAAA,EAClB,KAAKC,QAAU,gCACf,KAAKC,OAASG,EAAYC,cAC1B,KAAKH,SAAW,QAChB,KAAKC,OAAS,IAChB,CAEAG,UAAUC,EAAcC,EAAY,CAClC,OAAO,KAAKT,KAAKU,IACf,GAAG,KAAKT,OAAO,SAASO,CAAI,YAAY,KAAKN,MAAM,SAASO,CAAI,aAAa,KAAKN,QAAQ,WAAW,KAAKC,MAAM,EAAE,CAEtH,CAEAO,cAAcF,EAAY,CACxB,OAAO,KAAKT,KAAKU,IACf,GAAG,KAAKT,OAAO,6BAA6B,KAAKC,MAAM,SAASO,CAAI,aAAa,KAAKN,QAAQ,WAAW,KAAKC,MAAM,EAAE,CAE1H,CAEAQ,SAASC,EAAU,CACjB,OAAO,KAAKb,KAAKU,IACf,GAAG,KAAKT,OAAO,SAASY,CAAE,YAAY,KAAKX,MAAM,aAAa,KAAKC,QAAQ,WAAW,KAAKC,MAAM,EAAE,CAEvG,CAEAU,eAAeD,EAAU,CACvB,OAAO,KAAKb,KAAKU,IACf,GAAG,KAAKT,OAAO,SAASY,CAAE,mBAAmB,KAAKX,MAAM,EAAE,CAE9D,KAnCWJ,wCAAAA,GAAaiB,EAAAC,CAAA,CAAA,CAAA,KAAblB,wBAAAA,EAAamB,QAAbnB,EAAaoB,UAAAC,WAFZ,MAAM,CAAA,GAEd,IAAOrB,EAAPsB,SAAOtB,CAAa,GAAA,ECF1B,IAAauB,GAAW,IAAA,CAAlB,IAAOA,EAAP,MAAOA,CAAW,CAMtBC,YAAoBC,EAAgB,CAAhBA,EAAAA,aALpBC,EAAAA,gBACAC,EAAAA,eACAC,EAAAA,iBACAC,EAAAA,eAEoB,KAAAJ,KAAAA,EAClB,KAAKC,QAAU,gCACf,KAAKC,OAASG,EAAYC,cAC1B,KAAKH,SAAW,QAChB,KAAKC,OAAS,IAChB,CAEAG,UAAUC,EAAcC,EAAY,CAClC,OAAO,KAAKT,KAAKU,IACf,GAAG,KAAKT,OAAO,MAAMO,CAAI,YAAY,KAAKN,MAAM,SAASO,CAAI,aAAa,KAAKN,QAAQ,EAAE,CAE7F,CAEAQ,cAAcF,EAAY,CACxB,OAAO,KAAKT,KAAKU,IACf,GAAG,KAAKT,OAAO,yBAAyB,KAAKC,MAAM,SAASO,CAAI,aAAa,KAAKN,QAAQ,EAAE,CAEhG,KAvBWL,wCAAAA,GAAWc,EAAAC,CAAA,CAAA,CAAA,KAAXf,wBAAAA,EAAWgB,QAAXhB,EAAWiB,UAAAC,WAFV,MAAM,CAAA,GAEd,IAAOlB,EAAPmB,SAAOnB,CAAW,GAAA",
  "names": ["MoviesService", "constructor", "http", "baseUrl", "apiKey", "language", "region", "environment", "theMovieDBApi", "getMovies", "type", "page", "get", "getNowPlaying", "getMovie", "id", "getMovieVideos", "\u0275\u0275inject", "HttpClient", "factory", "\u0275fac", "providedIn", "_MoviesService", "OnTVService", "constructor", "http", "baseUrl", "apiKey", "language", "region", "environment", "theMovieDBApi", "getTvShow", "type", "page", "get", "getTvOnTheAir", "\u0275\u0275inject", "HttpClient", "factory", "\u0275fac", "providedIn", "_OnTVService"]
}
